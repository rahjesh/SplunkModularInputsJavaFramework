<endpoint name="data/inputs/kafka">
	<header>Kafka Messaging</header>
	<breadcrumb>
		<parent hidecurrent="False">datainputstats</parent>
		<name>Kafka Messaging</name>
	</breadcrumb>
	<elements>
		<element name="sourceFields" type="fieldset">
			<view name="list" />
			<view name="edit" />
			<view name="create" />
			<elements>

				<element name="name" label="Stanza Name">
					<view name="list" />
					<view name="create" />

					<key name="exampleText">Name of this stanza</key>
				</element>

<element name="activation_key" label="Activation Key">
					<view name="list" />
					<view name="create" />
					<view name="edit" />
					<key name="exampleText">Visit &lt;a href="http://www.baboonbones.com/#activation"
						target="_blank"&gt;http://www.baboonbones.com/#activation&lt;/a&gt; to
						obtain a non-expiring key</key>
				</element>
				
				<element name="activation_key" label="Activation Key">
					<view name="list" />
					<view name="create" />
					<view name="edit" />
					<key name="exampleText">Visit &lt;a href="http://www.baboonbones.com/#activation"
						target="_blank"&gt;http://www.baboonbones.com/#activation&lt;/a&gt; to
						obtain a non-expiring key</key>
				</element>

				<element name="output_settings" type="fieldset">
					<key name="legend">Output Settings</key>
					<view name="edit" />
					<view name="create" />
					<view name="list" />
					<elements>

						<element name="output_type" type="select" label="Data Output">
							<onChange>

								<key name="_action">showonly</key>
								<key name="stdout">NONE</key>
								<group_set>
									<group name="hec_output_settings" />
								</group_set>
								<key name="hec">hec_output_settings</key>

							</onChange>
							<view name="list" />
							<view name="edit" />
							<view name="create" />

							<options>
								<opt value="stdout" label="STDOUT" />
								<opt value="hec" label="HTTP Event Collector" />
							</options>
						</element>

						<element name="hec_output_settings" type="fieldset">
							<key name="legend">HTTP Event Collector Output</key>
							<view name="edit" />
							<view name="create" />
							<elements>


								<element name="hec_port" type="textfield" label="HTTP(s) Port">

									<view name="edit" />
									<view name="create" />
									<key name="exampleText">HTTP(s) Port that you have setup in Splunk</key>
								</element>
								<element name="hec_token" type="textfield" label="Authorisation Token">

									<view name="edit" />
									<view name="create" />
									<key name="exampleText">Authorisation Token that you have setup in Splunk
									</key>
								</element>
								<element name="hec_poolsize" type="textfield"
									label="HTTP Client Pool Size">

									<view name="edit" />
									<view name="create" />
									<key name="exampleText">You can setup a pool of HTTP client
										connections.Defaults to 1</key>
								</element>
								<element name="hec_https" type="checkbox" label="Use HTTPs ?">

									<view name="edit" />
									<view name="create" />
									<key name="exampleText">Note : Plain HTTP performs better</key>
								</element>
								<element name="hec_batch_mode" type="checkbox" label="Use Batch Mode ?">

									<view name="edit" />
									<view name="create" />
									<key name="exampleText">Send events to SplunkD in batches vs individual
										events</key>
									<onChange>
										<key name="_action">showonly</key>
										<key name="0">NONE</key>
										<key name="1">ALL</key>
										<group_set>
											<group name="hec_batch_mode_settings" />
										</group_set>
									</onChange>
								</element>

								<element name="hec_batch_mode_settings" type="fieldset">
									<key name="legend">Batch Mode Settings</key>
									<view name="edit" />
									<view name="create" />
									<elements>


										<element name="hec_max_batch_size_bytes" type="textfield"
											label="Maximum batch size">

											<view name="edit" />
											<view name="create" />
											<key name="exampleText">Will flush a batch upload at this size,
												defaults to 1048576 (1MB)</key>
										</element>
										<element name="hec_max_batch_size_events" type="textfield"
											label="Maximum batch event count">

											<view name="edit" />
											<view name="create" />
											<key name="exampleText">Will flush a batch upload at this number of
												events, defaults to 100</key>
										</element>
										<element name="hec_max_inactive_time_before_batch_flush"
											type="textfield" label="Inactivity time before flushing batch buffer">

											<view name="edit" />
											<view name="create" />
											<key name="exampleText">Will flush a batch upload after this period of
												inactivity , defaults to 5000 (5 secs)</key>
										</element>


									</elements>
								</element>


							</elements>
						</element>

					</elements>
				</element>


				<element name="consumer_connection_settings" type="fieldset">
					<key name="legend">Consumer Connection Settings</key>
					<view name="edit" />
					<view name="create" />
					<view name="list" />
					<elements>
						<element name="topic_name" type="textfield" label="Kafka Topic Name">

							<view name="edit" />
							<view name="create" />
							<view name="list" />
							<key name="exampleText">Kafka Topic Name</key>
						</element>

						<element name="group_id" type="textfield" label="Kafka Group ID">

							<view name="edit" />
							<view name="create" />
							<view name="list" />
							<key name="exampleText">Kafka Group ID</key>
						</element>

						<element name="zookeeper_connect_host" type="textfield"
							label="Zookeeper Host">

							<view name="edit" />
							<view name="create" />
							<view name="list" />
							<key name="exampleText">Zookeeper Host.IP or resolvable hostname.</key>
						</element>
						<element name="zookeeper_connect_port" type="textfield"
							label="Zookeeper Port">

							<view name="edit" />
							<view name="create" />
							<view name="list" />
							<key name="exampleText">Zookeeper Port.Will default to 2181.</key>
						</element>
						<element name="zookeeper_connect_chroot" type="textfield"
							label="Zookeeper CHROOT path">

							<view name="edit" />
							<view name="create" />
							<view name="list" />
							<key name="exampleText">Zookeeper CHROOT path ie: foo/bar </key>
						</element>
						<element name="zookeeper_connect_rawstring" type="textfield"
							label="Zookeeper Raw Connection String">

							<view name="edit" />
							<view name="create" />
							<view name="list" />
							<key name="exampleText">Zookeeper raw connection string. This will override
								any host/port/chroot settings above.Using this format , multiple
								hosts can be provided in a comma delimited manner ie:
								hostname1:port1,hostname2:port2,hostname3:port3/chroot/path
							</key>
						</element>
						<element name="zookeeper_session_timeout_ms" type="textfield"
							label="Zookeeper Session Timeout">

							<view name="edit" />
							<view name="create" />

							<key name="exampleText">Session timeout value in milliseconds.Will default
								to 400.</key>
						</element>
						<element name="zookeeper_sync_time_ms" type="textfield"
							label="Zookeeper Sync Time">

							<view name="edit" />
							<view name="create" />

							<key name="exampleText">Sync time value in milliseconds.Will default to
								200.</key>
						</element>
						<element name="auto_commit_interval_ms" type="textfield"
							label="Autocommit Interval">

							<view name="edit" />
							<view name="create" />

							<key name="exampleText">Autocommit interval time value in milliseconds.Will
								default to 1000.</key>
						</element>
						<element name="additional_consumer_properties" type="textfield"
							label="Additional Consumer Connection Properties">

							<view name="edit" />
							<view name="create" />
							<key name="exampleText">Parameter string in format
								'key1=value1,key2=value2,key3=value3'. This gets passed to the
								implementation class to process.</key>
						</element>

					</elements>
				</element>



				<element name="message_handler" type="fieldset">
					<key name="legend">Message Processing</key>
					<view name="edit" />
					<view name="create" />
					<elements>




						<element name="message_handler_impl" type="textfield"
							label="Implementation class for a custom message handler">

							<view name="edit" />
							<view name="create" />
							<key name="exampleText">An implementation of the
								com.splunk.modinput.kafka.AbstractMessageHandler class.You would
								provide this if you required some custom handling/formatting of
								the messages you consume.Ensure that the necessary jars are in
								the $SPLUNK_HOME/etc/apps/kafka_ta/bin/lib directory.If ommitted
								then the default handler
								'com.splunk.modinput.kafka.DefaultMessageHandler' will be used.
							</key>
						</element>
						<element name="message_handler_params" type="textfield"
							label="Implementation parameter string for the custom message handler">

							<view name="edit" />
							<view name="create" />
							<key name="exampleText">Parameter string in format
								'key1=value1,key2=value2,key3=value3'. This gets passed to the
								implementation class to process.</key>
						</element>


					</elements>
				</element>

				<element name="additional_startup_settings" type="fieldset">
					<key name="legend">Additional Startup Settings</key>
					<view name="edit" />
					<view name="create" />
					<elements>


						<element name="additional_jvm_propertys" type="textfield"
							label="Additional JVM System Properties">

							<view name="edit" />
							<view name="create" />
							<key name="exampleText">Parameter string in format
								'key1=value1,key2=value2,key3=value3'</key>
						</element>

					</elements>
				</element>
			</elements>
		</element>

		<element name="sourcetypeFields" type="fieldset">
			<view name="list" />
			<view name="edit" />
			<view name="create" />
			<elements>
				<element name="spl-ctrl_sourcetypeSelect" type="select"
					label="Set sourcetype">
					<onChange>
						<!-- <key name="auto">NONE</key> -->
						<key name="_action">showonly</key>
						<group_set>
							<group name="sourcetype" />
							<group name="spl-ctrl_from_list" />
						</group_set>
						<key name="sourcetype">sourcetype</key>
						<key name="spl-ctrl_from_list">spl-ctrl_from_list</key>
					</onChange>
					<options>
						<!-- <opt value="auto" label="Automatic"/> -->
						<opt value="spl-ctrl_from_list" label="From list" />
						<opt value="sourcetype" label="Manual" />
					</options>
					<view name="edit" />
					<view name="create" />
					<!-- <key name="exampleText">Set to automatic and Splunk will classify 
						and assign sourcetype automatically. Unknown sourcetypes will be given a 
						placeholder name.</key> -->
					<key name="processValueEdit">[[ e for e in ['sourcetype'] if form_defaults.get(e)
						][0]]</key>
					<key name="processValueAdd">[[ e for e in ['sourcetype'] if form_defaults.get(e)
						][0]]</key>
				</element>
				<element name="sourcetype" type="textfield" label="Source type">
					<view name="list" />
					<view name="edit" />
					<view name="create" />
					<key name="exampleText">If this field is left blank, the default value of
						script will be used for the source type.</key>
					<key name="processValueList">_('script') if (value==None or value=='') else value
					</key>
					<key name="submitValueAdd">form_data.get('spl-ctrl_from_list') if
						form_data.get('spl-ctrl_sourcetypeSelect')=='spl-ctrl_from_list'
						else value if
						form_data.get('spl-ctrl_sourcetypeSelect')=='sourcetype' else None
					</key>
					<key name="submitValueEdit">form_data.get('spl-ctrl_from_list') if
						form_data.get('spl-ctrl_sourcetypeSelect')=='spl-ctrl_from_list'
						else value if
						form_data.get('spl-ctrl_sourcetypeSelect')=='sourcetype' else None
					</key>
					<key name="labelList">Source type</key>
				</element>
				<element name="spl-ctrl_from_list" type="select"
					label="Select source type from list">
					<view name="edit" />
					<view name="create" />
					<key name="exampleText">Splunk
						classifies all common data types automatically, but if you're
						looking for something specific, you can find more source types in
						the <![CDATA[<a href="../../../apps/remote">Splunkbase apps browser</a>]]>
						or online at <![CDATA[<a href="http://www.splunkbase.com/" target="_blank">www.splunkbase.com</a>]]>.
					</key>
					<key name="requiredIfVisible" />
					<key name="dynamicOptions" type="dict">
						<key name="keyName">title</key>
						<key name="keyValue">title</key>
						<key name="splunkSource">/saved/sourcetypes</key>
						<key name="splunkSourceParams" type="dict">
							<key name="count">-1</key>
							<key name="search">'pulldown_type=true'</key>
						</key>
						<key name="prefixOptions" type="list">
							<item type="list">
								<item></item>
								<item>Choose...</item>
							</item>
						</key>
					</key>
				</element>
			</elements>
			<key name="legend">Source type</key>
			<key name="helpText">Set sourcetype field for all events from this source.
			</key>
		</element>


		<element name="spl-ctrl_EnableAdvanced" type="checkbox" label="More settings"
			class="spl-mgr-advanced-switch">
			<view name="edit" />
			<view name="create" />
			<onChange>
				<key name="_action">showonly</key>
				<key name="0">NONE</key>
				<key name="1">ALL</key>
				<group_set>
					<group name="advanced" />
				</group_set>
			</onChange>
		</element>
		<element name="advanced" type="fieldset" class="spl-mgr-advanced-options">
			<view name="edit" />
			<view name="create" />
			<elements>
				<element name="hostFields" type="fieldset">
					<key name="legend">Host</key>
					<view name="list" />
					<view name="edit" />
					<view name="create" />
					<elements>
						<element name="host" type="textfield" label="Host field value">
							<view name="edit" />
							<view name="create" />
						</element>
					</elements>
				</element>
				<element name="indexField" type="fieldset">
					<key name="legend">Index</key>
					<key name="helpText">Set the destination index for this source.</key>
					<view name="list" />
					<view name="edit" />
					<view name="create" />
					<elements>
						<element name="index" type="select" label="Index">
							<view name="list" />
							<view name="edit" />
							<view name="create" />
							<key name="dynamicOptions" type="dict">
								<key name="keyName">title</key>
								<key name="keyValue">title</key>
								<key name="splunkSource">/data/indexes</key>
								<key name="splunkSourceParams" type="dict">
									<key name="search">'isInternal=false disabled=false'</key>
									<key name="count">-1</key>
								</key>
							</key>
						</element>
					</elements>
				</element>
			</elements>
		</element>

		<element name="eai:acl.app" label="App">
			<view name="list" />
			<key name="processValueList">entity['eai:acl']['app'] or ""</key>
		</element>

	</elements>
</endpoint>